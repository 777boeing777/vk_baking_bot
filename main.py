import os
from keyboards import make_products_kb, make_categories_kb, make_main_menu_kb
from vk_bot.bot import VKBot
from vk_bot.types import User, Message
from states.states import CatalogState
import logging.config
from dict_config import dict_config
from vk_bot.db.conf import get_db_manager

logging.config.dictConfig(dict_config)


class MyBot(VKBot):
    logger = logging.getLogger('root')

    word_to_prev_state = "–ù–∞–∑–∞–¥ üõë"

    @staticmethod
    def unknown_command(message):
        bot.send_message(user_id=message.user_id, text="–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞.")

    @staticmethod
    def main_menu(message: Message):
        user = User(user_id=message.user_id)
        bot.users_list.append(user)

        message_to_send = "–ü—Ä–∏–≤–µ—Ç! –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –º–æ—é –∫–æ–Ω–¥–∏—Ç–µ—Ä—Å–∫—É—é." \
                          " –í—ã–±–µ—Ä–∏, —á—Ç–æ —Ç–µ–±—è –∏–Ω—Ç–µ—Ä–µ—Å—É–µ—Ç –Ω–∞ –∫–ª–∞–≤–∏–∞—Ç—É—Ä–µ."

        menu_kb = make_main_menu_kb()
        bot.send_message(user_id=message.user_id, text=message_to_send, keyboard=menu_kb.get_data(to_vk=True))


bot = MyBot(token=os.getenv("TOKEN"))


@bot.message_handler(commands=['–ö–∞—Ç–µ–≥–æ—Ä–∏–∏'], state=CatalogState(1))
def categories(message: Message):
    message_to_send = "–í—ã–±–µ—Ä–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏—é, –∫–æ—Ç–æ—Ä–∞—è —Ç–µ–±–µ –∫–∞–∂–µ—Ç—Å—è –Ω–∞–∏–±–æ–ª–µ–µ –≤–∫—É—Å–Ω–æ–π =)"
    categories_keyboard = make_categories_kb()

    bot.send_message(
        user_id=message.user_id, text=message_to_send, keyboard=categories_keyboard.get_data(to_vk=True)
    )


@bot.message_handler(state=CatalogState(2), need_to_miss_if_back=True)
def categories_and_products(message: Message):
    products_kb = make_products_kb(message)

    bot.send_message(user_id=message.user_id, text="–í–æ—Ç, —á—Ç–æ —É –º–µ–Ω—è –µ—Å—Ç—å!'", keyboard=products_kb.get_data(to_vk=True))


@bot.message_handler(state=CatalogState(3))
def check_product(message):
    product = db_manager.get_product(message.text)
    if not product:
        bot.send_message(user_id=message.user_id, text="–ù–µ –Ω–∞—à–µ–ª –≤—ã–ø–µ—á–∫—É :(")
    else:
        with open(product.image, 'rb') as img:
            bot.send_message(user_id=message.user_id, text=f'{product.name}\n{product.description}', photo=img)


if __name__ == '__main__':
    db_manager = get_db_manager()
    bot.longpolling()
